@model X.PagedList.IPagedList<WorkTrackingSystem.Models.Baselineassessment>

@{
    ViewData["Title"] = "Danh sách đánh giá cơ bản";
    Layout = "~/Areas/AdminSystem/Views/Shared/_Admin.cshtml";
}

@{
    var totalEvaluations = Model.Count();
    var passedEvaluations = Model.Count(x => x.Evaluate.GetValueOrDefault());
    var failedEvaluations = totalEvaluations - passedEvaluations;
    var passRate = totalEvaluations > 0 ? (passedEvaluations * 100.0 / totalEvaluations) : 0;
    var groupedData = Model
        .Where(x => x.Time.HasValue)
        .GroupBy(x => x.Time.Value.ToString("MM/yyyy"))
        .Select(g => new
        {
            MonthYear = g.Key,
            SumVolume = g.Sum(x => x.VolumeAssessment ?? 0),  // Tính tổng thay vì trung bình
            SumProgress = g.Sum(x => x.ProgressAssessment ?? 0),
            SumQuality = g.Sum(x => x.QualityAssessment ?? 0),
            SumSummary = g.Sum(x => x.SummaryOfReviews ?? 0)
        })
        .OrderBy(g => g.MonthYear)
        .ToList();

    var labels = groupedData.Select(x => x.MonthYear).ToList();
    var sumVolume = groupedData.Select(x => x.SumVolume).ToList();
    var sumProgress = groupedData.Select(x => x.SumProgress).ToList();
    var sumQuality = groupedData.Select(x => x.SumQuality).ToList();
    var sumSummary = groupedData.Select(x => x.SumSummary).ToList();
}

<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb float-sm-end bg-light">
            <li class="breadcrumb-item">Admin</li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </div>
</div>

@if (TempData["NoDataMessage"] != null)
{
    <div class="alert alert-warning">@TempData["NoDataMessage"]</div>
}

<div class="row">
    <div class="col-md-6">
        <div class="">
            <form id="searchForm" method="get" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Mã nhân viên:</label>
                    <input type="text" name="employeeCode" class="form-control" value="@Context.Request.Query["employeeCode"]" placeholder="Nhập mã nhân viên">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Tên nhân viên:</label>
                    <input type="text" name="employeeName" class="form-control" value="@Context.Request.Query["employeeName"]" placeholder="Nhập tên nhân viên">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Trạng thái đánh giá:</label>
                    <select name="evaluate" class="form-select">
                        <option value="">Tất cả</option>
                        <option value="true" selected="@(Context.Request.Query["evaluate"] == "true")">Đạt</option>
                        <option value="false" selected="@(Context.Request.Query["evaluate"] == "false")">Chưa đạt</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Tháng/Năm:</label>
                    <input type="month" name="time" class="form-control" value="@Context.Request.Query["time"]">
                </div>
                <div class="col-md-12 text-end">
                    @* <button type="button" class="btn btn-primary" id="searchButton"><i class="bi bi-search"></i> Tìm kiếm</button> *@
                    <a asp-action="Index" class="btn btn-secondary"><i class="bi bi-arrow-repeat"></i> Reset</a>
                    @if (Model.Any())
                    {
                        <a asp-action="ExportToExcel"
                           asp-route-employeeCode="@Context.Request.Query["employeeCode"]"
                           asp-route-employeeName="@Context.Request.Query["employeeName"]"
                           asp-route-evaluate="@Context.Request.Query["evaluate"]"
                           asp-route-time="@Context.Request.Query["time"]"
                           class="btn btn-success"
                           target="_blank"
                           download
                           title="Xuất dữ liệu ra file Excel">
                            <i class="bi bi-file-earmark-excel"></i> Xuất Excel
                        </a>
                    }
                </div>
            </form>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-6" style="height: 300px;">
                <div class="chart-container border p-3">
                    <h5 class="text-center">Biểu đồ đánh giá</h5>
                    <canvas id="evaluationChart" width="200" height="100"></canvas>
                </div>
            </div>
            <div class="col-md-6" style="height: 300px;">
                <div class="chart-container border p-3">
                    <h5 class="text-center">Tóm tắt công việc</h5>
                    <canvas id="summaryChart" width="200" height="100"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" id="list-section">
            <div id="tableContainer">
                @await Html.PartialAsync("_BaselineTablePartial", Model)
            </div>
        </div>
        <div class="col-md-4 d-none" id="detail-section">
            <div class="actionCustomers"></div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Xử lý sự kiện thay đổi bộ lọc
            $("#searchForm input, #searchForm select").on("change input", function () {
                loadTable();
            });

            // Xử lý nút tìm kiếm
            $("#searchButton").on("click", function () {
                loadTable();
            });

            // Xử lý phân trang bằng AJAX
            $(document).on("click", ".page-link", function (e) {
                e.preventDefault();
                var url = $(this).attr("href");
                loadTable(url);
            });

            // Xử lý sự kiện AJAX cho nút chi tiết
            $(document).on("click", ".ajax-action", function (e) {
                e.preventDefault();
                var url = $(this).data("url");
                if ($("#detail-section").hasClass("d-none")) {
                    $("#list-section").removeClass("col-md-12").addClass("col-md-8");
                    $("#detail-section").removeClass("d-none").addClass("col-md-4");
                }
                $(".actionCustomers").load(url, function (response, status, xhr) {
                    if (status === "error") {
                        alert("Lỗi khi tải dữ liệu: " + xhr.status + " " + xhr.statusText);
                    }
                });
            });
        });

        function loadTable(url) {
            var formData = $("#searchForm").serialize();
            var baseUrl = url || "@Url.Action("Index")";

            $.ajax({
                url: baseUrl,
                type: "GET",
                data: formData,
                success: function (data) {
                    $("#tableContainer").html(data);
                },
                error: function (xhr) {
                    alert("Lỗi khi tải dữ liệu: " + xhr.responseText);
                }
            });
        }

        function closeDetailSection() {
            $("#list-section").removeClass("col-md-8").addClass("col-md-12");
            $("#detail-section").addClass("d-none");
            $(".actionCustomers").empty();
        }

        // Biểu đồ
        var labels = @Html.Raw(Json.Serialize(labels));
        var sumVolume = @Html.Raw(Json.Serialize(sumVolume));
        var sumProgress = @Html.Raw(Json.Serialize(sumProgress));
        var sumQuality = @Html.Raw(Json.Serialize(sumQuality));
        var sumSummary = @Html.Raw(Json.Serialize(sumSummary));

        var ctx1 = document.getElementById('evaluationChart').getContext('2d');
        var evaluationChart = new Chart(ctx1, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Tổng DGKL',
                        data: sumVolume,
                        borderColor: 'blue',
                        fill: false
                    },
                    {
                        label: 'Tổng DGTĐ',
                        data: sumProgress,
                        borderColor: 'green',
                        fill: false
                    },
                    {
                        label: 'Tổng DGCL',
                        data: sumQuality,
                        borderColor: 'red',
                        fill: false
                    }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Tổng điểm'
                        }
                    }
                }
            }
        });

        var ctx2 = document.getElementById('summaryChart').getContext('2d');
        var summaryChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Tổng Đánh giá tổng hợp',
                    data: sumSummary,
                    backgroundColor: 'orange'
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Tổng điểm'
                        }
                    }
                }
            }
        });
    </script>
}