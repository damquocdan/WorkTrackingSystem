@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<WorkTrackingSystem.Areas.AdminSystem.Models.JobViewModel>

<table class="table table-bordered text-left table-hover shadow" id="jobTable">
    <thead class=" text-center">
        <tr>
            <th>Hạng mục</th>
            <th>Tên công việc</th>
            <th>Hạn chót</th>
            <th>Ngày hoàn thiện</th>
            <th>Trạng thái</th>
            <th>Tiến độ</th>
            <th>Đánh giá khối lượng</th>
            <th>Đánh giá tiến độ</th>
            <th>Đánh giá chất lượng</th>
            <th>Tổng hợp đánh giá</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="job-row @(item.ScoreStatus == 1 ? "table-success" :
                                item.ScoreStatus == 2 ? "table-warning" :
                                item.ScoreStatus == 3 ? "table-danger" :
                                item.ScoreStatus == 4 ? "table-primary" :
                                item.ScoreStatus == 0 ? "table-secondary" : "")" data-status="@item.ScoreStatus">
                <td class="category-name">@item.CategoryName</td>
                <td class="job-name">@item.JobName</td>
                <td>@item.Deadline?.ToString("dd/MM/yyyy")</td>
                <td class="text-center">
                    @if (item.Progress == 100 && item.CompletionDate.HasValue)
                    {
                        @item.CompletionDate.Value.ToString("dd/MM/yyyy")
                    }
                    else
                    {
                        <text>-</text>
                    }
                </td>
                <td  class="text-center ">
                    <span class="badge @(item.ScoreStatus == 1 ? "bg-success" :
                                                        item.ScoreStatus == 2 ? "bg-warning" :
                                                        item.ScoreStatus == 3 ? "bg-danger" :
                                                        item.ScoreStatus == 4 ? "bg-primary" :
                                                        "bg-secondary") w-100" style="padding:7px;">
                        @if (item.ScoreStatus == 1)
                        {
                            <text>Hoàn thành</text>
                        }
                        else if (item.ScoreStatus == 2)
                        {
                            <text>Chưa hoàn thành</text>
                        }
                        else if (item.ScoreStatus == 3)
                        {
                            <text>Hoàn thành muộn</text>
                        }
                        else if (item.ScoreStatus == 4)
                        {
                            <text>Đang xử lý</text>
                        }
                        else
                        {
                            <text>Chưa bắt đầu</text>
                        }
                    </span>
                </td>
                <td class="text-center"><p class="progress-value m-0">@item.Progress%</p></td>
                <td class="text-center"><p class="progress-value m-0">@item.VolumeAssessment</p></td>
                <td class="text-center"><p class="progress-value m-0">@item.ProgressAssessment</p></td>
                <td class="text-center"><p class="progress-value m-0">@item.QualityAssessment</p></td>
                <td class="text-center"><p class="progress-value m-0">@Math.Round(item.SummaryOfReviews ?? 0, 1)</p></td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalItemCount > Model.PageSize)
{
    @Html.PagedListPager(Model, page => Url.Action("EmployeeWork", new
        {
            id = ViewBag.EmployeeId,
            page = page,
            search = ViewBag.Search,
            filterStatus = ViewBag.FilterStatus
        }), new PagedListRenderOptions
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" },
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
    MaximumPageNumbersToDisplay = 5
})
}