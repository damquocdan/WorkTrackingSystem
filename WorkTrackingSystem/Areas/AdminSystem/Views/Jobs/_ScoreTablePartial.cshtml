@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<WorkTrackingSystem.Models.Score>

<div class="table-responsive">
    <table class="table table-bordered text-left table-hover ">
        <thead class="text-center">
            <tr>
                <th>Nhân viên</th>
                <th>Danh mục</th>
                <th>Công việc</th>
                <th>Trạng thái</th>
                <th>Thời gian làm việc</th>
                <th>Ngày h.thành</th>
                <th>Tổng đ.giá</th>
                <th width="100px">
                    <form asp-action="ExportToExcel" method="get">
                        <input type="hidden" name="searchText" value="@Context.Request.Query["searchText"]" />
                        <input type="hidden" name="status" value="@Context.Request.Query["status"]" />
                        <input type="hidden" name="categoryId" value="@Context.Request.Query["categoryId"]" />
                        <input type="hidden" name="dueToday" value="@Context.Request.Query["dueToday"]" />
                        <input type="hidden" name="sortOrder" value="@Context.Request.Query["sortOrder"]" />
                        <input type="hidden" name="month" value="@Context.Request.Query["month"]" />
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-file-earmark-excel"></i> Excel
                        </button>
                    </form>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@(item.Status == 1 ? "table-success" :
                            item.Status == 2 ? "table-warning" :
                            item.Status == 3 ? "table-danger" :
                            item.Status == 4 ? "table-primary" :
                            item.Status == 0 ? "table-secondary" : "")">
                    <td>
                        @if (item.JobMapEmployee?.Employee != null)
                        {
                            <span class="fw-bold">@item.JobMapEmployee.Employee.Code</span>

                            <br>
                            @item.JobMapEmployee.Employee.FirstName @item.JobMapEmployee.Employee.LastName
                        }
                        else
                        {
                            <span class="text-danger">Chưa giao việc</span>
                        }
                    </td>
                    <td>@item.JobMapEmployee.Job.Category.Name</td>
                    <td>@item.JobMapEmployee.Job.Name</td>
                    <td class="text-center">
                        <span class="badge @(item.Status == 1 ? "bg-success" :
                                           item.Status == 2 ? "bg-warning" :
                                           item.Status == 3 ? "bg-danger" :
                                           item.Status == 4 ? "bg-primary" : "bg-secondary")" style="padding:10px;">
                            @switch (item.Status)
                            {
                                case 1:
                                    @:Hoàn thành
                                    break;
                                case 2:
                                    @:Chưa hoàn thành
                                    break;
                                case 3:
                                    @:Hoàn thành muộn
                                    break;
                                case 4:
                                    @:Đang xử lý
                                    break;
                                case 0:
                                    @:Chưa bắt đầu
                                    break;
                                default:
                                    @:Không xác định
                                    break;
                            }
                        </span>
                    </td>
                    <td class="text-center">@Html.DisplayFor(modelItem => item.Time) - @Html.DisplayFor(modelItem => item.CreateDate)</td>
                    <td class="text-center">@Html.DisplayFor(modelItem => item.CompletionDate)</td>
                    <td class="text-center">@(item.SummaryOfReviews?.ToString("F2") ?? "N/A")</td>
                    <td>
                        <a class="btn-green btn-event ajax-action" data-url="@Url.Action("Details", new { id = item.Id })"><i class="bi bi-info-circle"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.TotalItemCount > Model.PageSize)
{
    @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page = page,
            searchText = ViewBag.SearchText,
            month = ViewBag.Month,
            status = ViewBag.Status,
            categoryId = ViewBag.CategoryId,
            sortOrder = ViewBag.SortOrder,
            showCompletedZeroReview = ViewBag.ShowCompletedZeroReview,
            dueToday = ViewBag.DueToday
        }), new PagedListRenderOptions
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" },
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
    MaximumPageNumbersToDisplay = 5
})
}