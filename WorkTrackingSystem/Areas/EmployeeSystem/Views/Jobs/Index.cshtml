@using WorkTrackingSystem.Areas.EmployeeSystem.Models
@using X.PagedList.Mvc.Core
@* @model X.PagedList.IPagedList<WorkTrackingSystem.Models.Score> *@
	@model X.PagedList.IPagedList<WorkTrackingSystem.Areas.EmployeeSystem.Models.JobViewModel>
@{
	ViewData["Title"] = "Danh sách công việc";
	Layout = "~/Areas/EmployeeSystem/Views/Shared/_Employee.cshtml";
	var areaName = ViewContext.RouteData.Values["area"]?.ToString();
}

<!-- Content Header (Page header) -->
<div class="content-header">
	<div class="container-fluid">
		<div class="row ">
			<div class="col-sm-6">
				<h5 class="m-0">@ViewData["Title"]</h5>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard", new { area = areaName })">@areaName</a></li>
					<li class="breadcrumb-item active">@ViewData["Title"]</li>
				</ol>
			</div>
		</div>
	</div>
</div>
<p>
	<button class="btn btn-primary " type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" title="Bộ lọc">
		Tìm kiếm
	</button>
	<a class="btn btn-success ajax-action-create" data-bs-toggle="collapse" href="#collapsecreate" role="button" aria-expanded="false" aria-controls="collapsecreate" data-url="@Url.Action("Createjob")">Tạo công việc</a>
</p>
<div class="collapse show" id="collapseExample">
	<div class="card card-body">
		<div class=" ">
			<form asp-controller="Jobs" asp-action="Index" method="get">
				@Html.AntiForgeryToken()
				<div class="row gx-2 gy-2 align-items-end">
					<!-- Ô tìm kiếm -->
					<div class="col-md-4">
						<label class="form-label fw-bold">Tìm kiếm</label>
						<div class="input-group">
							<input type="text" class="form-control" name="search" placeholder="Nhập tên công việc / Code" value="@Context.Request.Query["search"]">
						</div>
					</div>

					<!-- Lọc theo Deadline -->
					<div class="col-md-4">
						<label class="form-label fw-bold">Deadline</label>
						<div class="input-group">
							<input type="date" name="deadlineStartDate" class="form-control" value="@ViewBag.DeadlineStartDate">
							<span class="input-group-text">→</span>
							<input type="date" name="deadlineEndDate" class="form-control" value="@ViewBag.DeadlineEndDate">
						</div>
					</div>

					<!-- Lọc theo Ngày hoàn thành -->
					<div class="col-md-4">
						<label class="form-label fw-bold">Hoàn thành</label>
						<div class="input-group">
							<input type="date" name="startDate" class="form-control" value="@ViewBag.StartDate">
							<span class="input-group-text">→</span>
							<input type="date" name="endDate" class="form-control" value="@ViewBag.EndDate">
						</div>
					</div>

					<!-- Lọc theo Tháng -->
					<div class="col-md-3">
						<label class="form-label fw-bold">Deadline tháng</label>
						<input type="month" name="selectedMonth" class="form-control" value="@ViewBag.SelectedMonth">
					</div>

					<!-- Lọc theo Trạng thái -->
					<div class="col-md-3">
						<label class="form-label fw-bold">Trạng thái</label>
						<select id="filterStatus" class="form-select">
							<option value="">Tất cả trạng thái</option>
							<option value="1">Hoàn thành</option>
							<option value="2">Chưa hoàn thành</option>
							<option value="3">Hoàn thành muộn</option>
							<option value="4">Đang xử lý</option>
							<option value="0">Chưa bắt đầu</option>
						</select>
					</div>

					<!-- Nút Lọc & Reset -->
					<div class="col-md-2 d-flex justify-content-end mt-4">
						<a href="#" id="resetButton" class="btn btn-secondary me-2">
							<i class="bi bi-arrow-repeat"></i>
						</a>
						<button class="btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
							<i class="fa-solid fa-chevron-up"></i>
						</button>
					</div>
				</div>
			</form>
		</div>

	</div>
</div>
<div class="actionCreate collapse mb-3" id="collapsecreate"></div>
<div id="jobListContainer">
	@await Html.PartialAsync("_JobListPartial", Model)
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

@section Scripts {
    <script>
        $(document).ready(function () {
            // Hàm tải danh sách công việc qua AJAX
            function loadJobs(url) {
                $.ajax({
                    url: url,
                    type: "GET",
                    beforeSend: function () {
                        $("#jobListContainer").html('<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>');
                    },
                    success: function (data) {
                        $("#jobListContainer").html(data);
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi khi tải dữ liệu.");
                    }
                });
            }

            // Hàm lấy class trạng thái
            function getStatusClass(status) {
                switch (status) {
                    case 1: return "table-success";
                    case 2: return "table-warning";
                    case 3: return "table-danger";
                    case 4: return "table-primary";
                    case 0: return "table-secondary";
                    default: return "table-secondary";
                }
       
            }
            // Hàm lấy class trạng thái
            function getClassStatus(status) {
                switch (status) {
                    case 1: return "bg-success";
                    case 2: return "bg-warning";
                    case 3: return "bg-danger";
                    case 4: return "bg-primary";
                    case 0: return "bg-secondary";
                    default: return "bg-secondary";
                }

            }

            // Xử lý tìm kiếm
            $("input[name='search']").on("input", function () {
                let url = new URL(window.location.href);
                url.searchParams.set("search", $(this).val());
                loadJobs(url.toString());
            });

            // Xử lý lọc theo khoảng thời gian Deadline
            $("input[name='deadlineStartDate'], input[name='deadlineEndDate']").change(function () {
                let url = new URL(window.location.href);
                url.searchParams.set("deadlineStartDate", $("input[name='deadlineStartDate']").val());
                url.searchParams.set("deadlineEndDate", $("input[name='deadlineEndDate']").val());
                loadJobs(url.toString());
            });

            // Xử lý lọc theo ngày hoàn thành
            $("input[name='startDate'], input[name='endDate']").change(function () {
                let url = new URL(window.location.href);
                url.searchParams.set("startDate", $("input[name='startDate']").val());
                url.searchParams.set("endDate", $("input[name='endDate']").val());
                loadJobs(url.toString());
            });

            // Xử lý bộ lọc theo tháng deadline
            $("input[name='selectedMonth']").change(function () {
                let url = new URL(window.location.href);
                url.searchParams.set("selectedMonth", $(this).val());
                loadJobs(url.toString());
            });

            // Xử lý bộ lọc trạng thái
            $("#filterStatus").change(function () {
                let url = new URL(window.location.href);
                url.searchParams.set("filterStatus", $(this).val());
                loadJobs(url.toString());
            });

            // Xử lý phân trang
            $(document).on("click", ".pagination-container .page-link", function (e) {
                e.preventDefault();
                let pageUrl = $(this).attr("href");
                if (pageUrl !== "#") {
                    loadJobs(pageUrl);
                }
            });

            // Xử lý nút Reset
            $("#resetButton").click(function (e) {
                e.preventDefault();
                $("input[name='search']").val('');
                $("input[name='deadlineStartDate']").val('');
                $("input[name='deadlineEndDate']").val('');
                $("input[name='startDate']").val('');
                $("input[name='endDate']").val('');
                $("input[name='selectedMonth']").val('');
                $("#filterStatus").val('');

                let url = new URL(window.location.href);
                url.searchParams.delete("search");
                url.searchParams.delete("deadlineStartDate");
                url.searchParams.delete("deadlineEndDate");
                url.searchParams.delete("startDate");
                url.searchParams.delete("endDate");
                url.searchParams.delete("selectedMonth");
                url.searchParams.delete("filterStatus");

                loadJobs(url.toString());
            });

            // Xử lý sự kiện AJAX cho nút tạo công việc
            $(document).on("click", ".ajax-action-create", function (e) {
                e.preventDefault();
                var url = $(this).data("url");
                $(".actionCreate").load(url, function (response, status, xhr) {
                    if (status === "error") {
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi khi tải dữ liệu",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                });
            });

            // Xử lý cập nhật tiến độ công việc với debounce
            let debounceTimer;
            $("#jobListContainer").on('input', '.progress-slider', function () {
                clearTimeout(debounceTimer);
                let $slider = $(this);
                let jobId = parseInt($slider.data('jobId'));
                let progress = parseFloat($slider.val());
                $slider.next().text(progress + '%');

                debounceTimer = setTimeout(() => {
                    $.ajax({
                        url: '/EmployeeSystem/Jobs/UpdateProgress',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ id: jobId, progress: progress }),
                        success: function (data) {
                            if (data.success) {
                                console.log("Cập nhật tiến độ thành công! Data:", data);
                                let $row = $(`.progress-slider[data-job-id="${jobId}"]`).closest('.job-row');
                                let $statusTd = $row.find('td:nth-child(5) ');
                                // Cập nhật trạng thái
                                let $statusSpan = $statusTd.find('span');
                                // let $statusSpan = $row.find('td:nth-child(5) span');
                                if ($statusSpan.length) {
                                    let newStatus = data.newStatus;
                                    $statusSpan.text(newStatus === 1 ? "Hoàn thành"
                                        : newStatus === 2 ? "Chưa hoàn thành"
                                            : newStatus === 3 ? "Hoàn thành muộn"
                                                : newStatus === 4 ? "Đang xử lý"
                                                    : "Chưa bắt đầu");
                                    $row.attr('data-status', newStatus);
                                    $row.removeClass("table-success table-warning table-danger table-primary table-secondary");
                                    $row.addClass(getStatusClass(newStatus));
                                    console.log("check bg", newStatus)
                                    $statusSpan.removeClass("bg-success bg-warning bg-danger bg-primary bg-secondary");
                                    $statusSpan.addClass(getClassStatus(newStatus));
                                }

                                // Cập nhật ngày hoàn thành
                                let $completionDateCell = $row.find('td:nth-child(4)');
                                if ($completionDateCell.length) {
                                    if (progress === 100 && data.completionDate) {
                                        $completionDateCell.text(data.completionDate);
                                    } else {
                                        $completionDateCell.text("-");
                                    }
                                }

                                // Cập nhật các điểm đánh giá trong <select>
                                let $volumeSelect = $row.find('[data-field="VolumeAssessment"]');
                                let $progressSelect = $row.find('[data-field="ProgressAssessment"]');
                                let $qualitySelect = $row.find('[data-field="QualityAssessment"]');
                                if ($volumeSelect.length && $progressSelect.length && $qualitySelect.length) {
                                    $volumeSelect.val(data.volumeAssessment.toString());
                                    $progressSelect.val(data.progressAssessment.toString());
                                    $qualitySelect.val(data.qualityAssessment.toString());
                                    // Kích hoạt sự kiện change để cập nhật giao diện và SummaryOfReviews
                                    $volumeSelect.trigger('change');
                                    $progressSelect.trigger('change');
                                    $qualitySelect.trigger('change');
                                    console.log("Updated select values:", {
                                        volume: data.volumeAssessment,
                                        progress: data.progressAssessment,
                                        quality: data.qualityAssessment
                                    });
                                } else {
                                    console.error("Select elements not found for jobId:", jobId);
                                }

                                // Cập nhật SummaryOfReviews
                                $row.find('.summary-display').text(data.summaryOfReviews.toFixed(2));
                            } else {
                                console.error("Lỗi cập nhật:", data.message);
                                alert('Cập nhật thất bại: ' + data.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Lỗi AJAX:', {
                                status: xhr.status,
                                error: error,
                                responseText: xhr.responseText
                            });
                            let errorMessage = xhr.responseJSON?.message || error;
                            alert('Lỗi khi gửi yêu cầu: ' + errorMessage);
                        }
                    });
                }, 300); // Debounce 300ms
            });

            // Xử lý cập nhật đánh giá
            $(document).on('change', '.assessment-input', function () {
                var $input = $(this);
                var jobId = $input.data('id');
                var field = $input.data('field');
                var value = parseFloat($input.val());
                var token = $('input[name="__RequestVerificationToken"]').val();

                if (!jobId || isNaN(jobId)) {
                    console.error('JobId không hợp lệ:', jobId);
                    alert('JobId không hợp lệ.');
                    return;
                }
                if (!['VolumeAssessment', 'ProgressAssessment', 'QualityAssessment'].includes(field)) {
                    console.error('Field không hợp lệ:', field);
                    alert('Field không hợp lệ.');
                    return;
                }
                if (isNaN(value) || value < 0 || value > 3) {
                    console.error('Value không hợp lệ:', value);
                    alert('Value không hợp lệ.');
                    return;
                }
                if (!token) {
                    console.error('Token chống giả mạo không tồn tại.');
                    alert('Token chống giả mạo không tồn tại.');
                    return;
                }

                console.log('Sending AJAX:', { id: jobId, field: field, value: value, __RequestVerificationToken: token });

                $.ajax({
                    url: '@Url.Action("UpdateAssessment", "Jobs", new { area = "EmployeeSystem" })',
                    type: 'POST',
                    data: {
                        id: jobId,
                        field: field,
                        value: value,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            updateSummary(jobId);
                        } else {
                            console.error('Cập nhật thất bại:', response.message);
                            alert('Cập nhật thất bại: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Lỗi AJAX:', {
                            status: xhr.status,
                            error: error,
                            responseText: xhr.responseText
                        });
                        let errorMessage = xhr.responseJSON?.message || error;
                        alert('Lỗi khi gửi yêu cầu: ' + errorMessage);
                    }
                });
            });

            // Hàm tính và cập nhật SummaryOfReviews
            function updateSummary(jobId) {
                var $row = $(`tr .assessment-input[data-id="${jobId}"]`).closest('tr');
                var volume = parseFloat($row.find('[data-field="VolumeAssessment"]').val()) || 0;
                var progress = parseFloat($row.find('[data-field="ProgressAssessment"]').val()) || 0;
                var quality = parseFloat($row.find('[data-field="QualityAssessment"]').val()) || 0;

                var summary = (volume * 0.6) + (progress * 0.15) + (quality * 0.25);
                $row.find('.summary-display').text(summary.toFixed(2));
            }
        });
    </script>
}



