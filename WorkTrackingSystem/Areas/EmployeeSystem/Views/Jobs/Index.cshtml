@using WorkTrackingSystem.Areas.EmployeeSystem.Models
@using X.PagedList.Mvc.Core
@* @model X.PagedList.IPagedList<WorkTrackingSystem.Models.Score> *@
	@model X.PagedList.IPagedList<WorkTrackingSystem.Areas.EmployeeSystem.Models.JobViewModel>
@{
	ViewData["Title"] = "Danh sách công việc";
	Layout = "~/Areas/EmployeeSystem/Views/Shared/_Employee.cshtml";
}
<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">@ViewData["Title"] </h1>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item"><a href="#">Employee </a></li>
					<li class="breadcrumb-item active">@ViewData["Title"]</li>
				</ol>
			</div>
		</div>
	</div>
</div>

<div class="card shadow-sm p-3 mb-3">
	<form asp-controller="Jobs" asp-action="Index" method="get">
		<div class="row gx-2 gy-2 align-items-end">
			<!-- Ô tìm kiếm -->
			<div class="col-md-4">
				<label class="form-label fw-bold">Tìm kiếm</label>
				<div class="input-group">
					<input type="text" class="form-control" name="search" placeholder="Nhập tên công việc / Code" value="@Context.Request.Query["search"]">
				</div>
			</div>

			<!-- Lọc theo Deadline -->
			<div class="col-md-4">
				<label class="form-label fw-bold">Deadline</label>
				<div class="input-group">
					<input type="date" name="deadlineStartDate" class="form-control" value="@ViewBag.DeadlineStartDate">
					<span class="input-group-text">→</span>
					<input type="date" name="deadlineEndDate" class="form-control" value="@ViewBag.DeadlineEndDate">
				</div>
			</div>

			<!-- Lọc theo Ngày hoàn thành -->
			<div class="col-md-4">
				<label class="form-label fw-bold">Hoàn thành</label>
				<div class="input-group">
					<input type="date" name="startDate" class="form-control" value="@ViewBag.StartDate">
					<span class="input-group-text">→</span>
					<input type="date" name="endDate" class="form-control" value="@ViewBag.EndDate">
				</div>
			</div>

			<!-- Lọc theo Tháng -->
			<div class="col-md-3">
				<label class="form-label fw-bold">Deadline tháng</label>
				<input type="month" name="selectedMonth" class="form-control" value="@ViewBag.SelectedMonth">
			</div>

			<!-- Lọc theo Trạng thái -->
			<div class="col-md-3">
				<label class="form-label fw-bold">Trạng thái</label>
				<select id="filterStatus" class="form-select">
					<option value="">Tất cả trạng thái</option>
					<option value="1">Hoàn thành</option>
					<option value="2">Chưa hoàn thành</option>
					<option value="3">Hoàn thành muộn</option>
					<option value="4">Đang xử lý</option>
					<option value="0">Chưa bắt đầu</option>
				</select>
			</div>

			<!-- Nút Lọc & Reset -->
			<div class="col-md-6 d-flex justify-content-between">
				
				<a href="#" id="resetButton" class="btn btn-secondary"><i class="bi bi-arrow-repeat"></i> </a>
			</div>
		</div>
	</form>
</div>



<div id="jobListContainer">
	@await Html.PartialAsync("_JobListPartial", Model)
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

@section Scripts {
	<script>

		$(document).ready(function () {
			function loadJobs(url) {
				$.ajax({
					url: url,
					type: "GET",
					beforeSend: function () {
						$("#jobListContainer").html('<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>');
					},
					success: function (data) {
						$("#jobListContainer").html(data);
						// Gắn lại sự kiện cho các progress-slider sau khi nội dung được tải
						attachProgressSliderEvents();
					},
					error: function () {
						alert("Đã xảy ra lỗi khi tải dữ liệu.");
					}
				});
			}

			// Hàm để gắn sự kiện cho progress-slider
			function attachProgressSliderEvents() {
				document.querySelectorAll('.progress-slider').forEach(slider => {
					slider.removeEventListener('input', handleProgressChange); // Xóa sự kiện cũ nếu có
					slider.addEventListener('input', handleProgressChange);
				});
			}

			// Logic xử lý thay đổi tiến độ
			function handleProgressChange() {
				console.log('Sự kiện input đã được kích hoạt!');
				let jobId = parseInt(this.dataset.jobId);
				let progress = parseFloat(this.value);
				this.nextElementSibling.textContent = progress + '%';

				fetch('/EmployeeSystem/Jobs/UpdateProgress', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({ id: jobId, progress: progress })
				})
					.then(response => response.json())
					.then(data => {
						if (data.success) {
							console.log("Cập nhật tiến độ thành công!");
							let slider = document.querySelector(`.progress-slider[data-job-id="${jobId}"]`);
							let row = slider ? slider.closest('.job-row') : null;
							if (row) {
								let statusSpan = row.querySelector("td:nth-child(5) span");
								if (statusSpan) {
									let newStatus = data.newStatus;
									statusSpan.textContent = newStatus === 1 ? "Hoàn thành"
										: newStatus === 2 ? "Chưa hoàn thành"
											: newStatus === 3 ? "Hoàn thành muộn"
												: newStatus === 4 ? "Đang xử lý"
													: "Chưa bắt đầu";
									row.setAttribute('data-status', newStatus);
								}
								let completionDateCell = row.querySelector("td:nth-child(4)");
								if (completionDateCell) {
									if (progress === 100 && data.completionDate) {
										completionDateCell.textContent = data.completionDate;
									} else {
										completionDateCell.textContent = "-";
									}
								}
							}
						} else {
							console.error("Lỗi cập nhật:", data.message);
						}
					})
					.catch(error => console.error('Lỗi:', error));
			}

			// Các xử lý khác như tìm kiếm, phân trang, lọc...
			$("input[name='search']").on("input", function () {
				let url = new URL(window.location.href);
				url.searchParams.set("search", $(this).val());
				loadJobs(url.toString());
			});

			$(document).on("click", ".pagination-container .page-link", function (e) {
				e.preventDefault();
				let pageUrl = $(this).attr("href");
				if (pageUrl !== "#") {
					loadJobs(pageUrl);
				}
			});

			$("#filterStatus").change(function () {
				let url = new URL(window.location.href);
				url.searchParams.set("filterStatus", $(this).val());
				loadJobs(url.toString());
			});

			// Gắn sự kiện ban đầu khi trang được tải
			attachProgressSliderEvents();
		});
		document.addEventListener('DOMContentLoaded', function () {
			document.querySelectorAll('.progress-slider').forEach(slider => {

				slider.addEventListener('input', function () {
					console.log('Sự kiện input đã được kích hoạt!');
					let jobId = parseInt(this.dataset.jobId);
					let progress = parseFloat(this.value);
					this.nextElementSibling.textContent = progress + '%';

					fetch('/EmployeeSystem/Jobs/UpdateProgress', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ id: jobId, progress: progress })
					})
						.then(response => response.json())
						.then(data => {
							if (data.success) {
								console.log("Cập nhật tiến độ thành công!");

								// 🔥 Tìm hàng công việc đúng cách 🔥
								let slider = document.querySelector(`.progress-slider[data-job-id="${jobId}"]`);
								let row = slider ? slider.closest('.job-row') : null;  // Tìm thẻ <tr> cha
								if (row) {
									let statusSpan = row.querySelector("td:nth-child(5) span");
									if (statusSpan) {
										let newStatus = data.newStatus;
										statusSpan.textContent = newStatus === 1 ? "Hoàn thành"
											: newStatus === 2 ? "Chưa hoàn thành"
												: newStatus === 3 ? "Hoàn thành muộn"
													: newStatus === 4 ? "Đang xử lý"
														: "Chưa bắt đầu";
										// Cập nhật `data-status`
										row.setAttribute('data-status', newStatus);

									} else {
										console.warn(`Không tìm thấy phần tử trạng thái trong hàng có jobId = ${jobId}`);
									}
									let completionDateCell = row.querySelector("td:nth-child(4)");
									if (completionDateCell) {
										if (progress === 100 && data.completionDate) {
											completionDateCell.textContent = data.completionDate;
										} else {
											completionDateCell.textContent = "-";
										}
									}
								} else {
									console.warn(`Không tìm thấy hàng công việc cho jobId = ${jobId}`);
								}
							} else {
								console.error("Lỗi cập nhật:", data.message);
							}
						})
						.catch(error => console.error('Lỗi:', error));
				});
			});
		})
	</script>
}


