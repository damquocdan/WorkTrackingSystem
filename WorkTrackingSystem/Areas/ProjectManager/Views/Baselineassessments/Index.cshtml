@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<WorkTrackingSystem.Models.Baselineassessment>

@{
    ViewData["Title"] = "Danh sách đánh giá cơ bản";
    Layout = "~/Areas/ProjectManager/Views/Shared/_ProjectManager.cshtml";
}

@if (TempData["NoDataMessage"] != null)
{
    <div class="alert alert-warning">@TempData["NoDataMessage"]</div>
}

@{
    var totalEvaluations = Model.TotalItemCount;
    var passedEvaluations = Model.Count(x => x.Evaluate.GetValueOrDefault());
    var failedEvaluations = totalEvaluations - passedEvaluations;
    var passRate = totalEvaluations > 0 ? (passedEvaluations * 100.0 / totalEvaluations) : 0;
    var groupedData = Model
        .Where(x => x.Time.HasValue)
        .GroupBy(x => x.Time.Value.ToString("MM/yyyy"))
        .Select(g => new
        {
            MonthYear = g.Key,
            SumVolume = g.Sum(x => x.VolumeAssessment ?? 0),
            SumProgress = g.Sum(x => x.ProgressAssessment ?? 0),
            SumQuality = g.Sum(x => x.QualityAssessment ?? 0),
            SumSummary = g.Sum(x => x.SummaryOfReviews ?? 0)
        })
        .OrderBy(g => g.MonthYear)
        .ToList();

    var labels = groupedData.Select(x => x.MonthYear).ToList();
    var sumVolume = groupedData.Select(x => x.SumVolume).ToList();
    var sumProgress = groupedData.Select(x => x.SumProgress).ToList();
    var sumQuality = groupedData.Select(x => x.SumQuality).ToList();
    var sumSummary = groupedData.Select(x => x.SumSummary).ToList();
}

<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb float-sm-end bg-light">
            <li class="breadcrumb-item">Project Manager</li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="">
            @* <h1 class="mb-4 text-center">Danh sách đánh giá cơ bản</h1> *@
            <div class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Mã nhân viên:</label>
                    <input type="text" id="employeeCode" name="employeeCode" class="form-control" value="@ViewBag.EmployeeCode" placeholder="Nhập mã nhân viên">
                </div>

                <div class="col-md-3">
                    <label class="form-label">Tên nhân viên:</label>
                    <input type="text" id="employeeName" name="employeeName" class="form-control" value="@ViewBag.EmployeeName" placeholder="Nhập tên nhân viên">
                </div>

                <div class="col-md-3">
                    <label class="form-label">Trạng thái đánh giá:</label>
                    <select id="evaluate" name="evaluate" class="form-select">
                        <option value="">Tất cả</option>
                        <option value="true">Đạt</option>
                        <option value="false" >Chưa đạt</option>
                    </select>
                </div>

                <div class="col-md-3">
                    <label class="form-label">Tháng/Năm:</label>
                    <input type="month" id="time" name="time" class="form-control" value="@ViewBag.Time">
                </div>

                <div class="col-md-12 text-end">
                    @* <button type="button" id="searchButton" class="btn btn-primary"><i class="bi bi-search"></i> Tìm kiếm</button> *@
                    <a href="@Url.Action("Index")" class="btn btn-secondary"><i class="bi bi-arrow-repeat"></i> Reset</a>
                    @if (Model.Any())
                    {
                        <a id="exportExcel" class="btn btn-success" title="Xuất dữ liệu ra file Excel">
                            <i class="bi bi-file-earmark-excel"></i> Xuất Excel
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-6" style="height: 200px;">
                <div class="chart-container border p-3">
                    <h5 class="text-center">Biểu đồ đánh giá</h5>
                    <canvas id="evaluationChart" width="200" height="100"></canvas>
                </div>
            </div>
            <div class="col-md-6" style="height: 200px;">
                <div class="chart-container border p-3">
                    <h5 class="text-center">Tóm tắt công việc</h5>
                    <canvas id="summaryChart" width="200" height="100"></canvas>
                </div>
            </div>
        </div>
    </div>
   
</div>
 <div class="row">
        <div class="col-md-12" id="list-section">
            <div class="table-responsive">
                <table class="table table-bordered text-left table-hover" id="assessmentTable">
                    <thead class="text-center">
                        <tr>
                            <th>STT</th>
                            <th>Nhân viên</th>
                            <th>Tổng đánh giá khối lượng</th>
                            <th>Tổng đánh giá tiến độ</th>
                            <th>Tổng đánh giá chất lượng</th>
                            <th>Tổng đánh giá tổng hợp</th>
                            <th>Đánh giá</th>
                            <th>Tháng</th>
                           
                           
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int index = (Model.PageNumber - 1) * Model.PageSize;
                        }
                        @foreach (var item in Model)
                        {
                            index++;
                            <tr class="@(item.Evaluate.GetValueOrDefault() ? "table-success" : "table-danger")">
                                <td>@index</td>
                                <td>@Html.DisplayFor(modelItem => item.Employee.Code) - @Html.DisplayFor(modelItem => item.Employee.FirstName) @Html.DisplayFor(modelItem => item.Employee.LastName)</td>
                                <td>@item.VolumeAssessment</td>
                                <td>@item.ProgressAssessment</td>
                                <td>@item.QualityAssessment</td>
                                <td>@(item.SummaryOfReviews != null ? Convert.ToDouble(item.SummaryOfReviews).ToString("F2") : "N/A")</td>
                                <td>
                                    @if (item.Evaluate.GetValueOrDefault())
                                    {
                                        <p>Đạt</p>
                                    }
                                    else
                                    {
                                        <p>Chưa đạt</p>
                                    }
                                </td>
                                <td>@(item.Time.HasValue ? item.Time.Value.ToString("MM/yyyy") : "")</td>
                                
                              
                                <td>
                                    <a class="btn-green btn-event ajax-action" data-url="@Url.Action("Details", new { id = item.Id })"><i class="bi bi-info-circle"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- Phân trang -->
            <div class="pagination">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, employeeCode = ViewBag.EmployeeCode, employeeName = ViewBag.EmployeeName, evaluate = ViewBag.Evaluate, time = ViewBag.Time }), new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" },
                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                    MaximumPageNumbersToDisplay = 5
                })
            </div>
        </div>
        <div class="col-md-4 d-none" id="detail-section">
            <div class="actionCustomers"></div>
        </div>
    </div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var labels = @Html.Raw(Json.Serialize(labels));
        var sumVolume = @Html.Raw(Json.Serialize(sumVolume));
        var sumProgress = @Html.Raw(Json.Serialize(sumProgress));
        var sumQuality = @Html.Raw(Json.Serialize(sumQuality));
        var sumSummary = @Html.Raw(Json.Serialize(sumSummary));

        var ctx1 = document.getElementById('evaluationChart').getContext('2d');
        var evaluationChart = new Chart(ctx1, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Tổng DGKL',
                        data: sumVolume,
                        borderColor: 'blue',
                        fill: false
                    },
                    {
                        label: 'Tổng DGTĐ',
                        data: sumProgress,
                        borderColor: 'green',
                        fill: false
                    },
                    {
                        label: 'Tổng DGCL',
                        data: sumQuality,
                        borderColor: 'red',
                        fill: false
                    }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Tổng điểm'
                        }
                    }
                }
            }
        });

        var ctx2 = document.getElementById('summaryChart').getContext('2d');
        var summaryChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Tổng Đánh giá tổng hợp',
                    data: sumSummary,
                    backgroundColor: 'orange'
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Tổng điểm'
                        }
                    }
                }
            }
        });
    </script>
    <script>
        $(document).ready(function () {

            // Xử lý nút chi tiết (ajax-action) với event delegation
            $(document).on("click", ".ajax-action", function (e) {
                e.preventDefault();
                var url = $(this).data("url");
                if ($("#detail-section").hasClass("d-none")) {
                    $("#list-section").removeClass("col-md-12").addClass("col-md-8");
                    $("#detail-section").removeClass("d-none").addClass("col-md-4");
                }
                $(".actionCustomers").load(url, function (response, status, xhr) {
                    if (status === "error") {
                        alert("Lỗi khi tải dữ liệu: " + xhr.status + " " + xhr.statusText);
                    }
                });
            });

            // Xử lý tìm kiếm và lọc
            $("#employeeCode, #employeeName, #evaluate, #time").on("input change", function () {
                applyFilters();
            });

            // Xử lý nút tìm kiếm
            $("#searchButton").on("click", function () {
                applyFilters();
            });

            // Xử lý phân trang
            $(document).on("click", ".page-link", function (e) {
                e.preventDefault();
                var url = $(this).attr("href");
                loadTable(url);
            });

            // Xử lý nút xuất Excel
            $("#exportExcel").on("click", function (e) {
                e.preventDefault();
                var employeeCode = $("#employeeCode").val();
                var employeeName = $("#employeeName").val();
                var evaluate = $("#evaluate").val();
                var time = $("#time").val();
                var url = "@Url.Action("ExportToExcel")" + "?employeeCode=" + encodeURIComponent(employeeCode) + "&employeeName=" + encodeURIComponent(employeeName) + "&evaluate=" + encodeURIComponent(evaluate) + "&time=" + encodeURIComponent(time);
                window.location.href = url;
            });
        });

        function applyFilters() {
            var employeeCode = $("#employeeCode").val();
            var employeeName = $("#employeeName").val();
            var evaluate = $("#evaluate").val();
            var time = $("#time").val();
            var url = "@Url.Action("Index")" + "?employeeCode=" + encodeURIComponent(employeeCode) + "&employeeName=" + encodeURIComponent(employeeName) + "&evaluate=" + encodeURIComponent(evaluate) + "&time=" + encodeURIComponent(time);
            loadTable(url);
        }

        function loadTable(url) {
            $.ajax({
                url: url,
                type: "GET",
                beforeSend: function () {
                    $("#assessmentTable").html('<div class="text-center">Đang tải...</div>');
                },
                success: function (data) {
                    var newTable = $(data).find("#assessmentTable").html();
                    $("#assessmentTable").html(newTable);
                    var newPagination = $(data).find(".pagination").html();
                    $(".pagination").html(newPagination);
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi tải dữ liệu:", status, error);
                }
            });
        }

        function closeDetailSection() {
            $("#list-section").removeClass("col-md-8").addClass("col-md-12");
            $("#detail-section").addClass("d-none");
        }
    </script>
}