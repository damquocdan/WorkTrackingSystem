@using X.PagedList.Mvc.Core
@model WorkTrackingSystem.Models.Employee

@{
    ViewData["Title"] = "Chi tiết nhân viên";
    Layout = "~/Areas/ProjectManager/Views/Shared/_ProjectManager.cshtml";
}

<h1 class="text-center">Chi tiết nhân viên 
    <a data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
        @Model.FirstName @Model.LastName
</a>
</h1>
<div class="collapse show" id="collapseExample">
    <div class="card shadow-lg p-4">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="card-title">Thông tin nhân viên</h4>
            <button class="btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample"><i class="fa-solid fa-chevron-up"></i></button>
        </div>
        <hr />

        <div class="row">
            <div class="col-md-4">
                <div class="text-center mb-3">
                    <img src="@Model.Avatar" alt="Avatar" class="rounded-circle" style="width: 50%; border: 3px solid #ddd;">
                </div>
            </div>
            <div class="col-md-4">
                <p class="fs-4"><strong>Nhân viên:</strong> @Model.Code - @Model.FirstName @Model.LastName</p>
                <p class="fs-4">
                    <strong>Giới tính:</strong>
                    @(Model.Gender == "male" ? "Nam" : Model.Gender == "female" ? "Nữ" : "Khác")
                </p>

                <p class="fs-4"><strong>Ngày sinh:</strong> @Model.Birthday</p>
                <p class="fs-4"><strong>TT liên lạc:</strong>(+84) @Model.Phone <br /> @Model.Email</p>
            </div>
            <div class="col-md-4">
                <p class="fs-4"><strong>Ngày vào làm:</strong> @Model.HireDate</p>
                <p class="fs-4"><strong>Địa chỉ:</strong> @Model.Address</p>
                <p class="fs-4"><strong>Phòng ban:</strong> @Model.Department?.Name</p>
                <p class="fs-4"><strong>Chức vụ:</strong> @Model.Position?.Name</p>
            </div>
        </div>
    </div>
</div>


<!-- Danh sách công việc -->
<div class="card shadow-lg mt-4 p-4">
    <h4 class="card-title">Công việc được giao</h4>
    <hr />
    @if (ViewBag.JobMaps != null && ((IEnumerable<WorkTrackingSystem.Models.Jobmapemployee>)ViewBag.JobMaps).Any())
    {
        <table class="table table-bordered text-left table-hover" id="employeeTable">
            <thead class="text-center">
                <tr>
                    <th class="text-center">Nhân viên</th>
                    <th class="text-center">Danh mục</th>
                    <th class="text-center">Công việc</th>
                    <th class="text-center">Trạng thái</th>
                    <th class="text-center">Bắt đầu</th>
                    <th class="text-center">Hạn chót</th>
                    <th class="text-center">Ngày hoàn thành</th>
                    <th class="text-center">Tổng đánh giá</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var jobMap in (X.PagedList.IPagedList<WorkTrackingSystem.Models.Jobmapemployee>)ViewBag.JobMaps)
                {
                    var latestScore = jobMap.Scores?.OrderByDescending(s => s.CreateDate).FirstOrDefault();
                    <tr class="@(latestScore?.Status == 1 ? "table-success" :
                                latestScore?.Status == 2 ? "table-warning" :
                                latestScore?.Status == 3 ? "table-danger" :
                                latestScore?.Status == 4 ? "table-primary" :
                                latestScore?.Status == 0 ? "table-secondary" : "")">
                        <td>
                            @Model.Code - @Model.FirstName @Model.LastName
                        </td>
                        <td>@(jobMap.Job?.Category?.Name ?? "N/A")</td>
                        <td>@(jobMap.Job?.Name ?? "N/A")</td>
                        <td>
                            @switch (latestScore?.Status)
                            {
                                case 1:
                                    <span class="text-bold">Hoàn thành</span>
                                    break;
                                case 2:
                                    <span class="text-bold">Chưa hoàn thành</span>
                                    break;
                                case 3:
                                    <span class="text-bold">Hoàn thành muộn</span>
                                    break;
                                case 4:
                                    <span class="text-bold">Đang xử lý</span>
                                    break;
                                case 0:
                                    <span class="text-bold">Chưa bắt đầu</span>
                                    break;
                                default:
                                    <span class="text-bold">Không xác định</span>
                                    break;
                            }
                        </td>
                        <td>@(latestScore?.Time?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</td>
                        <td>@(jobMap.Job?.Deadline1?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                        <td>@(latestScore?.CompletionDate?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                        <td>@(latestScore?.SummaryOfReviews?.ToString("F2") ?? "N/A")</td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Phân trang -->
        <div class="pagination">
            @Html.PagedListPager((X.PagedList.IPagedList<WorkTrackingSystem.Models.Jobmapemployee>)ViewBag.JobMaps, page => Url.Action("Details", new
                {
                    id = Model.Id,
                    page = page
                }), new PagedListRenderOptions
   {
       LiElementClasses = new string[] { "page-item" },
       PageClasses = new string[] { "page-link" },
       DisplayLinkToFirstPage = PagedListDisplayMode.Always,
       DisplayLinkToLastPage = PagedListDisplayMode.Always,
       DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
       DisplayLinkToNextPage = PagedListDisplayMode.Always,
       DisplayEllipsesWhenNotShowingAllPageNumbers = true,
       MaximumPageNumbersToDisplay = 5
   })
        </div>
    }
    else
    {
        <p class="text-center">Không có công việc nào được giao cho nhân viên này.</p>
    }
</div>

<div class="mt-3">
    <a class="btn btn-secondary" asp-action="Index">Quay lại danh sách</a>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            console.log("Document ready");

            // Xử lý phân trang
            $(document).on("click", ".page-link", function (e) {
                e.preventDefault();
                var url = $(this).attr("href");
                console.log("Pagination clicked, URL:", url);
                loadTable(url);
            });
        });

        function loadTable(url) {
            console.log("Loading table with URL:", url);
            $.ajax({
                url: url,
                type: "GET",
                beforeSend: function () {
                    $("#employeeTable").html('<div class="text-center">Đang tải...</div>');
                },
                success: function (data) {
                    console.log("AJAX success");
                    var newTable = $(data).find("#employeeTable").html();
                    var newPagination = $(data).find(".pagination").html();
                    if (newTable) {
                        $("#employeeTable").html(newTable);
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi",
                            text: "Không tìm thấy bảng công việc trong dữ liệu trả về.",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                    if (newPagination) {
                        $(".pagination").html(newPagination);
                    } else {
                        $(".pagination").html('<p class="text-center">Không có phân trang.</p>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error:", status, error);
                    Swal.fire({
                        icon: "error",
                        title: "Lỗi",
                        text: "Không thể tải danh sách công việc. Vui lòng thử lại sau.",
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            });
        }

        function closeDetailSection() {
            $("#list-section").removeClass("col-md-8").addClass("col-md-12");
            $("#detail-section").addClass("d-none");
            $(".completion-colum, .sum-colum").show();
        }
    </script>
}