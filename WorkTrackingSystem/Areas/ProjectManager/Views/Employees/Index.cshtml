@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<WorkTrackingSystem.Models.Employee>

@{
    ViewData["Title"] = "Quản lý nhân viên";
    Layout = "~/Areas/ProjectManager/Views/Shared/_ProjectManager.cshtml";
}
<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb float-sm-end bg-light">
            <li class="breadcrumb-item">Project Manager</li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-md-12 hide-on-detail" id="list-section">

        <!-- Form tìm kiếm -->
        <div class="row mb-2">
            <div class="col-lg-9 col-md-9 col-sm-12">
                <div class="row">
            <div class="col-md-4">
                        <input type="text" id="searchInput" name="searchTerm" class="form-control" placeholder="Nhập mã nhân viên, họ hoặc tên..." value="@ViewBag.Search" />
            </div>
            <div class="col-md-4">
                        <select class="form-select" id="positionId" name="positionId" asp-items="@ViewBag.Positions">
                            <option value="" selected>Tất cả vị trí</option>
                            @foreach (var position in ViewBag.Positions)
                            {
                                <option value="@position.Value">
                                    @position.Text
                                </option>
                            }
                        </select>
                        @* <select name="positionId" id="positionId" class="form-control" asp-items="@ViewBag.Positions">
                            <option value="">-- Chọn vị trí --</option>
                        </select> *@
            </div>
            @* <div class="col-md-4">
                <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> Tìm kiếm</button>
                <a asp-action="Index" class="btn btn-secondary"><i class="bi bi-arrow-clockwise"></i> Reset</a>
            </div> *@
                 </div>
             </div>
        </div>

        <div class="table-responsive mt-4">
            <table class="table table-bordered text-left table-hover " id="employeeTable">
                <thead class="text-center">
                    <tr>
                        <th>STT</th>
                        <th>Nhân viên</th>
                        <th class="hide-on-detail"> Giới tính</th>
                        <th class="hide-on-detail"> Ngày sinh</th>
                        <th class="hide-on-detail"> Điện thoại</th>
                        <th class="hide-on-detail"> Email</th>
                        <th class="hide-on-detail"> Ngày tuyển dụng</th>
                        <th class="hide-on-detail"> Địa chỉ</th>
                        <th class="hide-on-detail"> Phòng ban</th>
                        <th class="hide-on-detail">Chức vụ</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int index = 0;
                    }
                    @foreach (var item in Model)
                    {
                        index++;
                        <tr>
                            <td>@index</td>
                            <td>@Html.DisplayFor(modelItem => item.Code)-@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Gender)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Birthday)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Phone)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Email)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.HireDate)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Address)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Department.Name)</td>
                            <td class="hide-on-detail">@Html.DisplayFor(modelItem => item.Position.Name)</td>

                            <td>
                                <a class="btn-green btn-event ajax-action" data-url="@Url.Action("Details", new { id = item.Id })"><i class="bi bi-info-circle"></i></a>

                           
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="pagination">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchTerm = ViewBag.Search, positionId = ViewBag.PositionId }), new PagedListRenderOptions
       {
           LiElementClasses = new string[] { "page-item" },
           PageClasses = new string[] { "page-link" },
           DisplayLinkToFirstPage = PagedListDisplayMode.Always,
           DisplayLinkToLastPage = PagedListDisplayMode.Always,
           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
           DisplayLinkToNextPage = PagedListDisplayMode.Always,
           DisplayEllipsesWhenNotShowingAllPageNumbers = true,
           MaximumPageNumbersToDisplay = 5
       })
        </div>

    </div>
    <div class="col-md-8 d-none" id="detail-section">
        <div class="actionCustomers"></div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    console.log("Script started");
    $(document).ready(function () {
        console.log("Document ready");

        // Sử dụng event delegation cho .ajax-action
        $(document).on("click", ".ajax-action", function (e) {
            e.preventDefault();
            var url = $(this).data("url");
            $(".hide-on-detail").hide();

            if ($("#detail-section").hasClass("d-none")) {
                $("#list-section").removeClass("col-md-12").addClass("col-md-2");
                $("#detail-section").removeClass("d-none").addClass("col-md-12");
            }

            $(".actionCustomers").load(url, function (response, status, xhr) {
                if (status === "error") {
                    alert("Lỗi khi tải dữ liệu: " + xhr.status + " " + xhr.statusText);
                }
            });
        });

        $("#searchInput, #positionId").on("input change", function () {
            console.log("Filter triggered");
            applyFilters();
        });

        $(document).on("click", ".page-link", function (e) {
            e.preventDefault();
            var url = $(this).attr("href");
            console.log("Pagination clicked, URL:", url);
            loadTable(url);
        });
    });

    function applyFilters() {
        var searchText = $("#searchInput").val();
        var positionId = $("#positionId").val();
        var url = "@Url.Action("Index")" + "?search=" + encodeURIComponent(searchText) + "&positionId=" + positionId;
        console.log("Filter URL:", url);
        loadTable(url);
    }

    function loadTable(url) {
        console.log("Loading table with URL:", url);
        $.ajax({
            url: url,
            type: "GET",
            beforeSend: function () {
                $("#employeeTable").html('<div class="text-center">Đang tải...</div>');
            },
            success: function (data) {
                console.log("AJAX success");
                var newTable = $(data).find("#employeeTable").html();
                $("#employeeTable").html(newTable);
                var newPagination = $(data).find(".pagination").html();
                $(".pagination").html(newPagination);
            },
            error: function (xhr, status, error) {
                console.error("AJAX error:", status, error);
            }
        });
    }

    function closeDetailSection() {
        $("#list-section").removeClass("col-md-2").addClass("col-md-12");
        $("#detail-section").addClass("d-none");
        $(".hide-on-detail").show();
    }
</script>
@* <script>
    $(document).ready(function () {
        $(".ajax-action").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");
            console.log("oke");
            if ($("#detail-section").hasClass("d-none")) {
                $("#list-section").removeClass("col-md-12").addClass("col-md-8");
                $("#detail-section").removeClass("d-none").addClass("col-md-4");
                $(".email-column, .position-column, .address-column, .birthday-column").hide();
            }


            $(".actionCustomers").load(url, function (response, status, xhr) {
                if (status === "error") {
                    alert("Lỗi khi tải dữ liệu: " + xhr.status + " " + xhr.statusText);
                }
            });
        });
        // Xử lý tìm kiếm và lọc
        $("#searchInput, #positionId").on("input change", function () {
            console.log("Search input changed");
            applyFilters();
        });

        // Xử lý phân trang bằng AJAX
        $(document).on("click", ".page-link", function (e) {
            e.preventDefault();
            var url = $(this).attr("href");
            console.log("Paging URL:", url);  // Kiểm tra URL phân trang
            loadTable(url);
        });
    });

    // Hàm thực hiện tìm kiếm và lọc
    function applyFilters() {
        var searchText = $("#searchInput").val();
        var positionId = $("#positionId").val();

        var url = "@Url.Action("Index")" + "?search=" + encodeURIComponent(searchText) + "&positionId=" + positionId;
        console.log("Request URL:", url); // Debug URL request

        loadTable(url);
    }

    // Hàm AJAX tải lại bảng dữ liệu mà không load lại trang
    function loadTable(url) {
        $.ajax({
            url: url,
            type: "GET",
            beforeSend: function () {
                $("#employeeTable").html('<div class="text-center"><i class="spinner-border"></i> Đang tải...</div>');
            },
            success: function (data) {
                // Chỉ cập nhật bảng nhân viên và phân trang, không load lại toàn bộ trang
                var newTable = $(data).find("#employeeTable").html();
                $("#employeeTable").html(newTable);

                var newPagination = $(data).find(".pagination").html();
                $(".pagination").html(newPagination);
            },
            error: function (xhr, status, error) {
                console.error("Lỗi tải dữ liệu:", status, error);
            }
        });
    }

    function closeDetailSection() {
        $("#list-section").removeClass("col-md-2").addClass("col-md-12");
        $("#detail-section").addClass("d-none");
        $(".hide-on-detail").show();
    }
</script> *@

