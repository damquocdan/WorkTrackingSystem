@model IEnumerable<WorkTrackingSystem.Models.Score>

@{
    ViewData["Title"] = "Quản lý công việc";
    Layout = "~/Areas/ProjectManager/Views/Shared/_ProjectManager.cshtml";
}
<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb float-sm-end bg-light">
            <li class="breadcrumb-item">Project Manager</li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </div>
</div>
<form asp-action="Index" method="get">
    <div class="row mb-3">
        <div class="col-md-3">
            <input type="text" name="searchText" class="form-control" placeholder="Tìm kiếm theo mã / tên nhân viên / công việc" value="@Context.Request.Query["searchText"]">
        </div>
        <div class="col-md-2">
            <input type="month" name="month" class="form-control" value="@Context.Request.Query["month"]" />
        </div>
        <div class="col-md-2">
            <select name="status" class="form-control">
                <option value="">-- Trạng thái --</option>
                <option value="1">Hoàn thành</option>
                <option value="2">Chưa hoàn thành</option>
                <option value="3">Hoàn thành muộn</option>
                <option value="4">Đang xử lý</option>
                <option value="0">Chưa bắt đầu</option>
            </select>
        </div>
        <div class="col-md-1">
            <select name="categoryId" class="form-control">
                <option value="">-- Danh mục --</option>
                @foreach (var category in ViewData["Categories"] as List<WorkTrackingSystem.Models.Category>)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
        <div class="col-md-1">
            <select name="sortOrder" class="form-control">
                <option value="">-- Sắp xếp --</option>
                <option value="due_asc">Hạn hoàn thành tăng dần</option>
                <option value="due_desc">Hạn hoàn thành giảm dần</option>
                <option value="review_asc">Đánh giá tăng dần</option>
                <option value="review_desc">Đánh giá giảm dần</option>
            </select>
        </div>
        <div class="col-md-1">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="showCompletedZeroReview" id="showCompletedZeroReview" value="true" @(Context.Request.Query["showCompletedZeroReview"] == "true" ? "checked" : "")>
                <label class="form-check-label" for="showCompletedZeroReview">Chưa Đ.giá</label>
            </div>
        </div>
        <div class="col-md-1">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="dueToday" id="dueToday" value="true" @(Context.Request.Query["dueToday"] == "true" ? "checked" : "")>
                <label class="form-check-label" for="dueToday">Hạn hôm nay</label>
            </div>
        </div>
        <div class="col-md-1">
            <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i></button>
            <a asp-action="Index" class="btn btn-secondary"><i class="bi bi-arrow-repeat"></i></a>
        </div>
    </div>
</form>
<p>
    <a id="btn-create-job" class="btn btn-primary"><i class="bi bi-plus-circle"></i> Giao C.việc</a>
    <a class=" btn btn-success ajax-action" data-url="@Url.Action("Createjob")">Tạo công việc</a>
</p>
<div id="search-employee-section" class="d-none">
    <input type="text" id="employee-search" class="form-control" placeholder="Tìm kiếm nhân viên...">
    <div id="employee-suggestions" class="d-flex flex-wrap mt-2"></div>
</div>
<div id="selected-employee" class="d-none mt-3 selected-employee-container">
    <div class="card p-3 d-flex flex-row align-items-center">
        <img id="selected-avatar" src="" class="rounded-circle" width="50" height="50" />
        <h5 id="selected-name" class="ms-3 mb-0"></h5>
        <button id="clear-selection" class="btn btn-danger btn-sm ms-auto">Xóa</button>
    </div>
</div>
<div id="job-lists" class="mt-3 d-none">
    <h4 class="text-center">Công việc chưa được giao</h4>
    <div class="table-responsive">
        <table class="table table-bordered table-hover " id="unassigned-jobs-table">
            <thead class="table-dark text-white text-center">
                <tr>
                    <th> Danh mục</th>
                    <th><i class="bi bi-card-heading"></i> Tên công việc</th>
                    <th><i class="bi bi-clock"></i> Ngày bắt đầu</th>
                    <th><i class="bi bi-clock"></i> Hạn chót</th>
                    <th>Trạng thái</th>
                    <th>Giao việc</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <br />
    <h4 class="text-center">Công việc của nhân viên</h4>
    <div class="table-responsive">
        <table class="table table-bordered " id="assigned-jobs-table">
            <thead class="bg-primary">
                <tr>
                    <th><i class="bi bi-tag"></i> Danh mục</th>
                    <th><i class="bi bi-card-heading"></i> Tên công việc</th>
                    <th><i class="bi bi-clock"></i> Ngày bắt đầu</th>
                    <th><i class="bi bi-clock"></i> Hạn chót</th>
                    <th>Trạng thái</th>
                    <th><i class="bi bi-clock"></i> Ngày hoàn thành</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<form id="assign-job-form" action="@Url.Action("AssignEmployee", "Scores")" method="post" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="jobId" id="form-job-id" />
    <input type="hidden" name="employeeId" id="form-employee-id" />
</form>
<br />
<div class="row">
    <div class="col-md-12" id="list-section">
      
            <div class="table-responsive">
                <h3 class="text-center">Danh sách công việc</h3>
                <table class="table table-bordered table-hover">
                    <thead class="table-dark text-white text-center">
                        <tr>
                            <th>Nhân viên</th>
                            <th>Hạng mục</th>
                            <th>Công việc</th>
                            <th>Trạng thái</th>
                            <th>Thời gian làm việc</th>
                            <th class="completion-colum">Ngày hoàn thành</th>
                            <th class="sum-colum">Tổng đánh giá</th>
                            <th width="100px">
                                <form asp-action="ExportToExcel" method="get">
                                    <input type="hidden" name="searchText" value="@Context.Request.Query["searchText"]" />
                                    <input type="hidden" name="status" value="@Context.Request.Query["status"]" />
                                    <input type="hidden" name="categoryId" value="@Context.Request.Query["categoryId"]" />
                                    <input type="hidden" name="dueToday" value="@Context.Request.Query["dueToday"]" />
                                    <input type="hidden" name="sortOrder" value="@Context.Request.Query["sortOrder"]" />
                                    <input type="hidden" name="month" value="@Context.Request.Query["month"]" />
                                    <button type="submit" class="btn btn-success">
                                        <i class="bi bi-file-earmark-excel"></i> Excel
                                    </button>
                                </form>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="text-center
                                @(item.Status == 1 ? "table-success" :
                                item.Status == 2 ? "table-warning" :
                                item.Status == 3 ? "table-danger" :
                                item.Status == 4 ? "table-primary" :
                                item.Status == 0 ? "table-secondary" : "")">

                                <td>
                                    @if (item.JobMapEmployee?.Employee != null)
                                    {
                                        <span class="fw-bold">@item.JobMapEmployee.Employee.Code</span>
                                        <br>
                                        @item.JobMapEmployee.Employee.FirstName @item.JobMapEmployee.Employee.LastName
                                    }
                                    else
                                    {
                                        <span class="text-danger">Chưa giao việc</span>
                                    }
                                </td>
                                <td>@item.JobMapEmployee.Job.Category.Name</td>
                                <td>@item.JobMapEmployee.Job.Name</td>
                                <td>
                                    <span class=" badge
                                        @(item.Status == 1 ? "bg-success" :
                                        item.Status == 2 ? "bg-warning" :
                                        item.Status == 3 ? "bg-danger" :
                                        item.Status == 4 ? "bg-primary" :
                                        "bg-secondary") " style="padding:10px;">
                                        @switch (item.Status)
                                        {
                                            case 1:
                                                @("Hoàn thành")
                                                ; break;
                                            case 2:
                                                @("Chưa hoàn thành")
                                                ; break;
                                            case 3:
                                                @("Hoàn thành muộn")
                                                ; break;
                                            case 4:
                                                @("Đang xử lý")
                                                ; break;
                                            case 0:
                                                @("Chưa bắt đầu")
                                                ; break;
                                            default:
                                                @("Không xác định")
                                                ; break;
                                        }
                                    </span>
                                </td>
                                <td>
                                    @if (item.JobMapEmployee?.Employee == null)
                                    {
                                        <span>Chưa có thời gian cụ thể</span>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Time) <span>-</span> @Html.DisplayFor(modelItem => item.CreateDate)
                                    }
                                </td>
                                <td class="completion-colum">@Html.DisplayFor(modelItem => item.CompletionDate)</td>
                                <td class="sum-colum">@(item.SummaryOfReviews?.ToString("F2") ?? "N/A")</td>
                                <td>
                                    <div class="d-flex gap-2">
                                        @if (item.JobMapEmployee?.Employee != null && (item.IsActive ?? false))
                                        {
                                            <a class="btn btn-primary btn-sm ajax-action" data-url="@Url.Action("Create", new { currentJobMapEmployeeId = item.JobMapEmployee.Id })" title="Giao cho người khác">
                                                <i class="fas fa-people-arrows"></i>
                                            </a>
                                        }
                                        <a class="btn btn-warning btn-sm ajax-action" data-url="@Url.Action("Edit", new { id = item.Id })" title="Đánh giá">
                                            <i class="fas fa-star"></i>
                                        </a>
                                        <a class="btn btn-info btn-sm ajax-action" data-url="@Url.Action("Details", new { id = item.Id })" title="Chi tiết">
                                            <i class="fas fa-info-circle"></i>
                                        </a>
                                        <a class="btn btn-danger btn-sm ajax-action" data-url="@Url.Action("Delete", new { id = item.Id })" title="Xoá">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
     
    </div>
    <div class="col-md-4 d-none" id="detail-section">
        <div class="actionCustomers"></div>
    </div>
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        var employees = [
    @if (ViewBag.EmployeeList != null)
    {
        foreach (var employee in (IEnumerable<dynamic>)ViewBag.EmployeeList)
        {
            @Html.Raw($"{{ id: '{employee.Value}', name: '{employee.Text}', avatar: '{employee.Avatar}' }},")
        }
    }
            ];

        $("#btn-create-job").click(function () {
            $("#search-employee-section").removeClass("d-none");
            if (sessionStorage.getItem('selectedEmployee')) {
                $("#selected-employee").removeClass("d-none");
            }
        });

        $("#employee-search").autocomplete({
            source: function (request, response) {
                var results = $.map(employees, function (employee) {
                    if (employee.name.toLowerCase().includes(request.term.toLowerCase())) {
                        return employee;
                    }
                });
                response(results);
            },
            select: function (event, ui) {
                $("#employee-search").val('');
                showSelectedEmployee(ui.item);
                return false;
            },
            open: function () {
                var $menu = $(this).data("ui-autocomplete").menu.element;
                $menu.css({
                    "display": "flex",
                    "flex-direction": "row",
                    "flex-wrap": "wrap",
                    "overflow-x": "auto",
                    "white-space": "nowrap"
                });
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            return $("<li>")
                .append(`
                        <div class="card mb-2" style="width: 200px; text-align: center;">
                            <div class="card-body d-flex flex-column align-items-center">
                                <img src="${item.avatar}" class="mb-2" style="width: 100px; height: 100px; border-radius: 50%;">
                                <p class="mt-2">${item.name}</p>
                            </div>
                        </div>
                    `)
                .appendTo(ul);
        };

        function showSelectedEmployee(employee) {
            $("#selected-employee").removeClass("d-none");
            $("#selected-avatar").attr("src", employee.avatar);
            $("#selected-name").text(employee.name);
            $("#search-employee-section").addClass("d-none");
            $("#selected-employee").data("employee-id", employee.id);
            sessionStorage.setItem('selectedEmployee', JSON.stringify({
                id: employee.id,
                name: employee.name,
                avatar: employee.avatar
            }));
            fetchJobs(employee.id);
        }

        function fetchJobs(employeeId) {
            $.ajax({
                url: '@Url.Action("GetJobsByEmployee", "Scores")',
                type: 'GET',
                data: { employeeId: employeeId },
                success: function (result) {
                    if (result.success) {
                        displayJobs(result.unassignedJobs, result.assignedJobs);
                        $("#job-lists").removeClass("d-none");
                    } else {
                        Swal.fire({
                            // position: "top-end",
                            icon: "error",
                            title: "Lỗi: " + result.message,
                            showConfirmButton: false,
                            timer: 1500
                        });
                        $("#job-lists").addClass("d-none");
                    }
                },
                error: function (xhr) {
                    Swal.fire({
                        // position: "top-end",
                        icon: "error",
                        title: "Lỗi khi tải danh sách công việc",
                        showConfirmButton: false,
                        timer: 1500
                    });
                    $("#job-lists").addClass("d-none");
                }
            });
        }

        function displayJobs(unassignedJobs, assignedJobs) {
            var unassignedTableBody = $("#unassigned-jobs-table tbody");
            var assignedTableBody = $("#assigned-jobs-table tbody");

            unassignedTableBody.empty();
            assignedTableBody.empty();

            unassignedJobs.forEach(function (job) {
                var statusText = getStatusText(job.status);
                var rowClass = getStatusClass(job.status);
                unassignedTableBody.append(`
                        <tr class="${rowClass}" data-job-id="${job.id}">
                            <td>${job.categoryName || 'N/A'}</td>
                            <td>${job.name || 'N/A'}</td>
                            <td><input type="text" class="datepicker-time form-control" value="${formatDate(job.time)}" /></td>
                            <td><input type="text" class="datepicker-deadline form-control" value="${formatDate(job.deadline1)}" /></td>
                            <td><span class="text-bold">${statusText}</span></td>
                            <td>
                                <input type="checkbox" class="assign-job-checkbox" data-job-id="${job.id}" />
                            </td>
                        </tr>
                    `);
            });

            assignedJobs.forEach(function (job) {
                var statusText = getStatusText(job.status);
                var rowClass = getStatusClass(job.status);
                assignedTableBody.append(`
                        <tr class="${rowClass}" data-job-id="${job.id}">
                            <td>${job.categoryName || 'N/A'}</td>
                            <td>${job.name || 'N/A'}</td>
                            <td>${formatDate(job.time)}</td>
                            <td>${formatDate(job.deadline1)}</td>
                            <td><span class="text-bold">${statusText}</span></td>
                            <td>${formatDate(job.completionDate)}</td>
                        </tr>
                    `);
            });

            $(".datepicker-time").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true
            });
            $(".datepicker-deadline").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true
            });

            bindCheckboxEvents();
            bindAjaxActions();
        }

        function getStatusText(status) {
            switch (status) {
                case 1: return "Hoàn thành";
                case 2: return "Chưa hoàn thành";
                case 3: return "Hoàn thành muộn";
                case 4: return "Đang xử lý";
                case 0: return "Chưa bắt đầu";
                default: return "Chưa đánh giá";
            }
        }

        function getStatusClass(status) {
            switch (status) {
                case 1: return "table-success";
                case 2: return "table-warning";
                case 3: return "table-danger";
                case 4: return "table-primary";
                case 0: return "table-secondary";
                default: return "";
            }
        }

        $(document).ready(function () {
            $(".datepicker-time").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true
            });
            $(".datepicker-deadline").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true
            });
        });

        function formatDate(date) {
            if (!date) return '';
            const d = new Date(date);
            const day = String(d.getDate()).padStart(2, '0');
            const month = String(d.getMonth() + 1).padStart(2, '0');
            const year = d.getFullYear();
            return `${day}/${month}/${year}`;
        }

        function bindCheckboxEvents() {
            $(".assign-job-checkbox").off("change").on("change", function () {
                var checkbox = $(this);
                var jobId = checkbox.data("job-id");
                var employeeId = $("#selected-employee").data("employee-id");
                var time = checkbox.closest("tr").find(".datepicker-time").val();
                var deadline = checkbox.closest("tr").find(".datepicker-deadline").val();

                if (checkbox.is(":checked")) {
                    if (!employeeId) {
                        Swal.fire({
                            // position: "top-end",
                            icon: "warning",
                            title: "Vui lòng chọn nhân viên trước!",
                            showConfirmButton: false,
                            timer: 1500
                        });
                        checkbox.prop("checked", false);
                        return;
                    }

                    $("#form-job-id").val(jobId);
                    $("#form-employee-id").val(employeeId);

                    $.ajax({
                        url: $("#assign-job-form").attr("action"),
                        type: "POST",
                        data: {
                            jobId: jobId,
                            employeeId: employeeId,
                            time: time,
                            deadline: deadline,
                            "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result) {
                            if (result.success) {
                                Swal.fire({
                                    // position: "top-end",
                                    icon: "success",
                                    title: "Đã giao công việc thành công!",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                fetchJobs(employeeId);
                            } else {
                                Swal.fire({
                                    // position: "top-end",
                                    icon: "error",
                                    title: "Lỗi: " + result.message,
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                checkbox.prop("checked", false);
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                // position: "top-end",
                                icon: "error",
                                title: "Lỗi khi gán công việc",
                                showConfirmButton: false,
                                timer: 1500
                            });
                            checkbox.prop("checked", false);
                        }
                    });
                }
            });
        }

        $(".assign-job-btn").click(function () {
            var jobId = $(this).data("job-id");
            $("#search-employee-section").removeClass("d-none");
            $("#form-job-id").val(jobId);
        });

        function bindAjaxActions() {
            $(".ajax-action").off("click").on("click", function (e) {
                e.preventDefault();
                var url = $(this).data("url");
                if ($("#detail-section").hasClass("d-none")) {
                    $("#list-section").removeClass("col-md-12").addClass("col-md-8");
                    $("#detail-section").removeClass("d-none").addClass("col-md-4");
                    $(".completion-colum, .sum-colum").hide();
                }
                $(".actionCustomers").load(url, function (response, status, xhr) {
                    if (status === "error") {
                        Swal.fire({
                            // position: "top-end",
                            icon: "error",
                            title: "Lỗi khi tải dữ liệu",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                });
            });
        }

        $("#clear-selection").click(function () {
            $("#selected-employee").addClass("d-none");
            $("#search-employee-section").removeClass("d-none");
            $("#selected-employee").removeData("employee-id");
            sessionStorage.removeItem('selectedEmployee');
            $("#job-lists").addClass("d-none");
            location.reload();
        });

        var previouslySelected = sessionStorage.getItem('selectedEmployee');
        if (previouslySelected) {
            var employee = JSON.parse(previouslySelected);
            showSelectedEmployee(employee);
        }
    });

    function closeDetailSection() {
        $("#list-section").removeClass("col-md-8").addClass("col-md-12");
        $("#detail-section").addClass("d-none");
        $(".actionCustomers").empty();
        $(".completion-colum, .sum-colum").show();
    }
</script>
<script>
    $(document).ready(function () {
        $(".ajax-action").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");
            if ($("#detail-section").hasClass("d-none")) {
                $("#list-section").removeClass("col-md-12").addClass("col-md-8");
                $("#detail-section").removeClass("d-none").addClass("col-md-4");
                $(".completion-colum, .sum-colum").hide();
            }
            $(".actionCustomers").load(url, function (response, status, xhr) {
                if (status === "error") {
                    Swal.fire({
                        // position: "top-end",
                        icon: "error",
                        title: "Lỗi khi tải dữ liệu",
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            });
        });
    });

    function closeDetailSection() {
        $("#list-section").removeClass("col-md-8").addClass("col-md-12");
        $("#detail-section").addClass("d-none");
        $(".completion-colum, .sum-colum").show();
    }
</script>